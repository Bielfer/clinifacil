datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.MediumText
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Patient {
  id        Int       @id @default(autoincrement())
  name      String
  birthDate DateTime?
  sex       Sex?
  cpf       String?
  email     String?
  cellphone String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Doctor {
  id           Int            @id @default(autoincrement())
  name         String
  cpf          String
  crm          String
  email        String?
  cellphone    String?
  receptionist Receptionist[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt()
}

model Receptionist {
  id        Int      @id @default(autoincrement())
  name      String
  doctor    Doctor[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

enum Role {
  MASTER
  ADMIN
  DOCTOR
  RECEPTIONIST
}

enum Sex {
  Masculino
  Feminino
}
